name: Deploy Parallel Book Processor to Yandex Cloud Functions

on:
  push:
    branches: [ master ]
    paths:
      - 'app/parallel_book_processor.py'
      - 'app/batch_processor.py'
      - 'app/queue_batch_handler.py'
      - 'app/queue_sender.py'
      - '.github/workflows/yacloud-func-python PARALLEL.yml'
  workflow_dispatch:

env:
  YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
  YC_SA_ID: ${{ secrets.YC_SA_ID }}
  YC_SA_KEY_ID: ${{ secrets.YC_SA_KEY_ID }}
  YC_SA_PRIVATE_KEY: ${{ secrets.YC_SA_PRIVATE_KEY }}

jobs:
  deploy-parallel-processor:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install yandexcloud
    
    - name: Create deployment package for Parallel Processor
      run: |
        cd app
        zip -r ../parallel_processor.zip . -x "*.pyc" "__pycache__/*" "*.log"
    
    - name: Deploy Parallel Book Processor Function
      run: |
        yc serverless function create \
          --name=parallel-book-processor \
          --description="Parallel book processing coordinator" \
          --folder-id=$YC_FOLDER_ID \
          --runtime=python39 \
          --entrypoint=parallel_book_processor.handler \
          --memory=256m \
          --execution-timeout=60s \
          --environment="TOKEN=${{ secrets.TOKEN }},MESSAGE_QUEUE_URL=${{ secrets.MESSAGE_QUEUE_URL }},AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},AWS_REGION=ru-central1" \
          --source-path=parallel_processor.zip || echo "Function may already exist"
        
        yc serverless function version create \
          --function-name=parallel-book-processor \
          --runtime=python39 \
          --entrypoint=parallel_book_processor.handler \
          --memory=256m \
          --execution-timeout=60s \
          --environment="TOKEN=${{ secrets.TOKEN }},MESSAGE_QUEUE_URL=${{ secrets.MESSAGE_QUEUE_URL }},AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},AWS_REGION=ru-central1" \
          --source-path=parallel_processor.zip

  deploy-batch-processor:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install yandexcloud
    
    - name: Create deployment package for Batch Processor
      run: |
        cd app
        zip -r ../batch_processor.zip . -x "*.pyc" "__pycache__/*" "*.log"
    
    - name: Deploy Batch Processor Function
      run: |
        yc serverless function create \
          --name=batch-processor \
          --description="Batch text processing worker" \
          --folder-id=$YC_FOLDER_ID \
          --runtime=python39 \
          --entrypoint=batch_processor.handler \
          --memory=512m \
          --execution-timeout=300s \
          --environment="TOKEN=${{ secrets.TOKEN }},MESSAGE_QUEUE_URL=${{ secrets.MESSAGE_QUEUE_URL }},AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},AWS_REGION=ru-central1" \
          --source-path=batch_processor.zip || echo "Function may already exist"
        
        yc serverless function version create \
          --function-name=batch-processor \
          --runtime=python39 \
          --entrypoint=batch_processor.handler \
          --memory=512m \
          --execution-timeout=300s \
          --environment="TOKEN=${{ secrets.TOKEN }},MESSAGE_QUEUE_URL=${{ secrets.MESSAGE_QUEUE_URL }},AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},AWS_REGION=ru-central1" \
          --source-path=batch_processor.zip

  deploy-batch-queue-handler:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install yandexcloud
    
    - name: Create deployment package for Batch Queue Handler
      run: |
        cd app
        zip -r ../batch_queue_handler.zip . -x "*.pyc" "__pycache__/*" "*.log"
    
    - name: Deploy Batch Queue Handler Function
      run: |
        yc serverless function create \
          --name=batch-queue-handler \
          --description="Message Queue handler for batch processing" \
          --folder-id=$YC_FOLDER_ID \
          --runtime=python39 \
          --entrypoint=queue_batch_handler.handler \
          --memory=512m \
          --execution-timeout=300s \
          --environment="TOKEN=${{ secrets.TOKEN }},MESSAGE_QUEUE_URL=${{ secrets.MESSAGE_QUEUE_URL }},AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},AWS_REGION=ru-central1" \
          --source-path=batch_queue_handler.zip || echo "Function may already exist"
        
        yc serverless function version create \
          --function-name=batch-queue-handler \
          --runtime=python39 \
          --entrypoint=queue_batch_handler.handler \
          --memory=512m \
          --execution-timeout=300s \
          --environment="TOKEN=${{ secrets.TOKEN }},MESSAGE_QUEUE_URL=${{ secrets.MESSAGE_QUEUE_URL }},AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},AWS_REGION=ru-central1" \
          --source-path=batch_queue_handler.zip

  setup-triggers:
    runs-on: ubuntu-latest
    needs: [deploy-batch-queue-handler]
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install yandexcloud
    
    - name: Create Message Queue Trigger for Batch Processing
      run: |
        yc serverless trigger create message-queue \
          --name=batch-processing-trigger \
          --description="Trigger for batch processing messages" \
          --folder-id=$YC_FOLDER_ID \
          --queue=${{ secrets.MESSAGE_QUEUE_ARN }} \
          --batch-size=1 \
          --batch-cutoff=10s \
          --invoke-function-id=$(yc serverless function get batch-queue-handler --format=json | jq -r '.id') || echo "Trigger may already exist"


