from epub_processor import EpubProcessor
from books_library import BooksLibrary
import os


class BookAdder(object):
    """add new book to user's library"""

    def __init__(self):
        self.books_lib = BooksLibrary()
        self.epub_processor = EpubProcessor()

    def add_new_book(self, user_id, chat_id, epub_path, sending_mode):
        """
        Process EPUB file and add to user's library
        
        Args:
            user_id: ID of the user
            chat_id: Chat ID for database updates
            epub_path: Path to the EPUB file
            sending_mode: Mode for text separation ('by_sense' or 'by_newline')
            
        Returns:
            book_id: ID of the created book, or -1 if error
        """
        try:
            print(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            
            # Process EPUB file and create chunks in database
            book_id = self.epub_processor.process_epub(user_id, epub_path, sending_mode)
            print(f"üìö EPUB –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –ø–æ–ª—É—á–µ–Ω book_id: {book_id}")
            
            if book_id is None:
                print(f"‚ùå –û—à–∏–±–∫–∞: process_epub –≤–µ—Ä–Ω—É–ª None")
                return -1
            
            # Update user's current book
            print(f"üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∫–Ω–∏–≥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
            self.books_lib.update_current_book(user_id, chat_id, book_id)
            print(f"‚úÖ –¢–µ–∫—É—â–∞—è –∫–Ω–∏–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
            
            # Set reading position to 0 (start of book)
            print(f"üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é —á—Ç–µ–Ω–∏—è –≤ 0...")
            self.books_lib.update_book_pos(user_id, book_id, 0)
            print(f"‚úÖ –ü–æ–∑–∏—Ü–∏—è —á—Ç–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            
            # Clean up temporary file
            if os.path.exists(epub_path):
                os.remove(epub_path)
                print(f"üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω: {epub_path}")
            
            print(f"üéâ –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞! ID: {book_id}")
            return book_id
            
        except Exception as e:
            print(f"Error adding new book: {str(e)}")
            # Clean up temporary file even if there was an error
            if os.path.exists(epub_path):
                os.remove(epub_path)
            return -1
