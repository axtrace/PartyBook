import os
from epub_reader import EpubReader
from txt_file import BookChunkManager
from db_manager import DbManager
from text_transliter import TextTransliter


class EpubProcessor(object):
    """Process EPUB files and convert them to chunks in YDB"""

    def __init__(self):
        self.chunk_manager = BookChunkManager()
        self.db = DbManager()
        self.transliter = TextTransliter()

    def _make_filename(self, user_id, book_title):
        """Create filename for book based on user_id and title"""
        trans_title = self.transliter.translite_text(book_title)
        trans_title = trans_title.replace(" ", "_").lower()
        filename = str(user_id) + '_' + trans_title
        return filename

    def _send_progress_message(self, bot, chat_id, message):
        """Send progress message to Telegram chat"""
        if bot and chat_id:
            try:
                bot.send_chat_action(chat_id, 'typing')
                bot.send_message(chat_id, message)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")

    def process_epub(self, user_id, epub_path, sending_mode='by_sense', bot=None, chat_id=None):
        """
        Process EPUB file and save chunks to database
        
        Args:
            user_id: ID of the user who uploaded the book
            epub_path: Path to the EPUB file
            sending_mode: Mode for text separation ('by_sense' or 'by_newline')
            bot: Telegram bot instance for sending progress messages
            chat_id: Chat ID for sending progress messages
            
        Returns:
            book_id: ID of the created book in database
        """
        try:
            print(f"üìñ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É EPUB: {epub_path}")
            
            # Read EPUB file
            book_reader = EpubReader(epub_path)
            book_title = book_reader.get_booktitle()
            print(f"üìö –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: {book_title}")
            
            if not book_title:
                raise ValueError("Could not extract book title from EPUB")
            
            # Send initial message
            self._send_progress_message(bot, chat_id, f"üìö –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–Ω–∏–≥–∏: {book_title}")
            
            # Create filename for database
            book_name = self._make_filename(user_id, book_title)
            print(f"üìù –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ë–î: {book_name}")
            
            # Get or create book in database
            print(f"üíæ –°–æ–∑–¥–∞–µ–º/–ø–æ–ª—É—á–∞–µ–º –∫–Ω–∏–≥—É –≤ –ë–î...")
            self._send_progress_message(bot, chat_id, "üíæ –°–æ–∑–¥–∞—é –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
            book_id = self.db.get_or_create_book(book_name)
            print(f"‚úÖ –ö–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {book_id}")
            
            if book_id is None:
                raise ValueError(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –Ω–∞–π—Ç–∏ –∫–Ω–∏–≥—É: {book_name}")
            
            self._send_progress_message(bot, chat_id, f"‚úÖ –ö–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (ID: {book_id})")
            
            # Process text and create chunks
            print(f"üìÑ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–±–∏–≤–∫—É –Ω–∞ —á–∞–Ω–∫–∏...")
            self._send_progress_message(bot, chat_id, "üìÑ –ù–∞—á–∏–Ω–∞—é —Ä–∞–∑–±–∏–≤–∫—É —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —á–∞—Å—Ç–∏...")
            
            text_blocks_processed = 0
            total_chunks_created = 0
            empty_blocks_skipped = 0
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –±–ª–æ–∫ —Ç–µ–∫—Å—Ç–∞
            print(f"üîÑ –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –±–ª–æ–∫ —Ç–µ–∫—Å—Ç–∞...")
            cur_text = book_reader.get_next_item_text()
            print(f"üìä –ü–µ—Ä–≤—ã–π –±–ª–æ–∫ –ø–æ–ª—É—á–µ–Ω: {cur_text is not None}, –¥–ª–∏–Ω–∞: {len(cur_text) if cur_text else 0}")
            
            while cur_text is not None:
                if cur_text.strip():  # Only process non-empty text
                    print(f"üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª–∏–Ω–æ–π {len(cur_text)} —Å–∏–º–≤–æ–ª–æ–≤...")
                    try:
                        chunks_created = self.chunk_manager.create_chunks(book_id, cur_text, sending_mode)
                        total_chunks_created += chunks_created
                        text_blocks_processed += 1
                        print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –±–ª–æ–∫–æ–≤: {text_blocks_processed}, —Å–æ–∑–¥–∞–Ω–æ —á–∞–Ω–∫–æ–≤: {total_chunks_created}")
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –∫–∞–∂–¥—ã–µ 5 –±–ª–æ–∫–æ–≤
                        if text_blocks_processed % 5 == 0:
                            self._send_progress_message(bot, chat_id, 
                                f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –±–ª–æ–∫–æ–≤: {text_blocks_processed}, —Å–æ–∑–¥–∞–Ω–æ —á–∞–Ω–∫–æ–≤: {total_chunks_created}")
                        
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –±–ª–æ–∫–∞: {e}")
                        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö –±–ª–æ–∫–æ–≤
                else:
                    empty_blocks_skipped += 1
                    print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω –ø—É—Å—Ç–æ–π –±–ª–æ–∫ #{empty_blocks_skipped}")
                
                # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫ —Ç–µ–∫—Å—Ç–∞
                print(f"üîÑ –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫ —Ç–µ–∫—Å—Ç–∞...")
                cur_text = book_reader.get_next_item_text()
                print(f"üìä –°–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫ –ø–æ–ª—É—á–µ–Ω: {cur_text is not None}, –¥–ª–∏–Ω–∞: {len(cur_text) if cur_text else 0}")
            
            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –±–ª–æ–∫–æ–≤: {text_blocks_processed}, —Å–æ–∑–¥–∞–Ω–æ —á–∞–Ω–∫–æ–≤: {total_chunks_created}, –ø—Ä–æ–ø—É—â–µ–Ω–æ –ø—É—Å—Ç—ã—Ö: {empty_blocks_skipped}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            self._send_progress_message(bot, chat_id, 
                f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\nüìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –±–ª–æ–∫–æ–≤: {text_blocks_processed}\nüìö –°–æ–∑–¥–∞–Ω–æ —á–∞–Ω–∫–æ–≤: {total_chunks_created}")
            
            return book_id
            
        except Exception as e:
            print(f"‚ùå Error processing EPUB: {str(e)}")
            import traceback
            print(f"‚ùå Traceback: {traceback.format_exc()}")
            return None
